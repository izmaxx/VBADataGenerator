//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from VBGrammar.g4 by ANTLR 4.5.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="VBGrammarParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.1")]
[System.CLSCompliant(false)]
public interface IVBGrammarListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.startRule"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStartRule([NotNull] VBGrammarParser.StartRuleContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.startRule"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStartRule([NotNull] VBGrammarParser.StartRuleContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.module"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModule([NotNull] VBGrammarParser.ModuleContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.module"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModule([NotNull] VBGrammarParser.ModuleContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.moduleHeader"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModuleHeader([NotNull] VBGrammarParser.ModuleHeaderContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.moduleHeader"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModuleHeader([NotNull] VBGrammarParser.ModuleHeaderContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.moduleConfig"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModuleConfig([NotNull] VBGrammarParser.ModuleConfigContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.moduleConfig"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModuleConfig([NotNull] VBGrammarParser.ModuleConfigContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.moduleConfigElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModuleConfigElement([NotNull] VBGrammarParser.ModuleConfigElementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.moduleConfigElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModuleConfigElement([NotNull] VBGrammarParser.ModuleConfigElementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.moduleAttributes"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModuleAttributes([NotNull] VBGrammarParser.ModuleAttributesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.moduleAttributes"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModuleAttributes([NotNull] VBGrammarParser.ModuleAttributesContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.moduleDeclarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModuleDeclarations([NotNull] VBGrammarParser.ModuleDeclarationsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.moduleDeclarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModuleDeclarations([NotNull] VBGrammarParser.ModuleDeclarationsContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>optionBaseStmt</c>
	/// labeled alternative in <see cref="VBGrammarParser.moduleOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOptionBaseStmt([NotNull] VBGrammarParser.OptionBaseStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>optionBaseStmt</c>
	/// labeled alternative in <see cref="VBGrammarParser.moduleOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOptionBaseStmt([NotNull] VBGrammarParser.OptionBaseStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>optionCompareStmt</c>
	/// labeled alternative in <see cref="VBGrammarParser.moduleOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOptionCompareStmt([NotNull] VBGrammarParser.OptionCompareStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>optionCompareStmt</c>
	/// labeled alternative in <see cref="VBGrammarParser.moduleOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOptionCompareStmt([NotNull] VBGrammarParser.OptionCompareStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>optionExplicitStmt</c>
	/// labeled alternative in <see cref="VBGrammarParser.moduleOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOptionExplicitStmt([NotNull] VBGrammarParser.OptionExplicitStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>optionExplicitStmt</c>
	/// labeled alternative in <see cref="VBGrammarParser.moduleOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOptionExplicitStmt([NotNull] VBGrammarParser.OptionExplicitStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>optionPrivateModuleStmt</c>
	/// labeled alternative in <see cref="VBGrammarParser.moduleOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOptionPrivateModuleStmt([NotNull] VBGrammarParser.OptionPrivateModuleStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>optionPrivateModuleStmt</c>
	/// labeled alternative in <see cref="VBGrammarParser.moduleOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOptionPrivateModuleStmt([NotNull] VBGrammarParser.OptionPrivateModuleStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.moduleDeclarationsElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModuleDeclarationsElement([NotNull] VBGrammarParser.ModuleDeclarationsElementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.moduleDeclarationsElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModuleDeclarationsElement([NotNull] VBGrammarParser.ModuleDeclarationsElementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.moduleBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModuleBody([NotNull] VBGrammarParser.ModuleBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.moduleBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModuleBody([NotNull] VBGrammarParser.ModuleBodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.moduleBodyElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModuleBodyElement([NotNull] VBGrammarParser.ModuleBodyElementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.moduleBodyElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModuleBodyElement([NotNull] VBGrammarParser.ModuleBodyElementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.moduleBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModuleBlock([NotNull] VBGrammarParser.ModuleBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.moduleBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModuleBlock([NotNull] VBGrammarParser.ModuleBlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.attributeStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAttributeStmt([NotNull] VBGrammarParser.AttributeStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.attributeStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAttributeStmt([NotNull] VBGrammarParser.AttributeStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock([NotNull] VBGrammarParser.BlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock([NotNull] VBGrammarParser.BlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.blockStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlockStmt([NotNull] VBGrammarParser.BlockStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.blockStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlockStmt([NotNull] VBGrammarParser.BlockStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.appactivateStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAppactivateStmt([NotNull] VBGrammarParser.AppactivateStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.appactivateStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAppactivateStmt([NotNull] VBGrammarParser.AppactivateStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.beepStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBeepStmt([NotNull] VBGrammarParser.BeepStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.beepStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBeepStmt([NotNull] VBGrammarParser.BeepStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.chdirStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterChdirStmt([NotNull] VBGrammarParser.ChdirStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.chdirStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitChdirStmt([NotNull] VBGrammarParser.ChdirStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.chdriveStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterChdriveStmt([NotNull] VBGrammarParser.ChdriveStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.chdriveStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitChdriveStmt([NotNull] VBGrammarParser.ChdriveStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.closeStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCloseStmt([NotNull] VBGrammarParser.CloseStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.closeStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCloseStmt([NotNull] VBGrammarParser.CloseStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.constStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstStmt([NotNull] VBGrammarParser.ConstStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.constStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstStmt([NotNull] VBGrammarParser.ConstStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.constSubStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstSubStmt([NotNull] VBGrammarParser.ConstSubStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.constSubStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstSubStmt([NotNull] VBGrammarParser.ConstSubStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.dateStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDateStmt([NotNull] VBGrammarParser.DateStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.dateStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDateStmt([NotNull] VBGrammarParser.DateStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.declareStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeclareStmt([NotNull] VBGrammarParser.DeclareStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.declareStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeclareStmt([NotNull] VBGrammarParser.DeclareStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.deftypeStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeftypeStmt([NotNull] VBGrammarParser.DeftypeStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.deftypeStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeftypeStmt([NotNull] VBGrammarParser.DeftypeStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.deleteSettingStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeleteSettingStmt([NotNull] VBGrammarParser.DeleteSettingStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.deleteSettingStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeleteSettingStmt([NotNull] VBGrammarParser.DeleteSettingStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.doLoopStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDoLoopStmt([NotNull] VBGrammarParser.DoLoopStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.doLoopStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDoLoopStmt([NotNull] VBGrammarParser.DoLoopStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.endStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEndStmt([NotNull] VBGrammarParser.EndStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.endStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEndStmt([NotNull] VBGrammarParser.EndStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.enumerationStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnumerationStmt([NotNull] VBGrammarParser.EnumerationStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.enumerationStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnumerationStmt([NotNull] VBGrammarParser.EnumerationStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.enumerationStmt_Constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnumerationStmt_Constant([NotNull] VBGrammarParser.EnumerationStmt_ConstantContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.enumerationStmt_Constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnumerationStmt_Constant([NotNull] VBGrammarParser.EnumerationStmt_ConstantContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.eraseStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEraseStmt([NotNull] VBGrammarParser.EraseStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.eraseStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEraseStmt([NotNull] VBGrammarParser.EraseStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.errorStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterErrorStmt([NotNull] VBGrammarParser.ErrorStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.errorStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitErrorStmt([NotNull] VBGrammarParser.ErrorStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.eventStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEventStmt([NotNull] VBGrammarParser.EventStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.eventStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEventStmt([NotNull] VBGrammarParser.EventStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.exitStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExitStmt([NotNull] VBGrammarParser.ExitStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.exitStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExitStmt([NotNull] VBGrammarParser.ExitStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.filecopyStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFilecopyStmt([NotNull] VBGrammarParser.FilecopyStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.filecopyStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFilecopyStmt([NotNull] VBGrammarParser.FilecopyStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.forEachStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForEachStmt([NotNull] VBGrammarParser.ForEachStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.forEachStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForEachStmt([NotNull] VBGrammarParser.ForEachStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.forNextStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForNextStmt([NotNull] VBGrammarParser.ForNextStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.forNextStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForNextStmt([NotNull] VBGrammarParser.ForNextStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.functionStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionStmt([NotNull] VBGrammarParser.FunctionStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.functionStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionStmt([NotNull] VBGrammarParser.FunctionStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.getStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGetStmt([NotNull] VBGrammarParser.GetStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.getStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGetStmt([NotNull] VBGrammarParser.GetStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.goSubStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGoSubStmt([NotNull] VBGrammarParser.GoSubStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.goSubStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGoSubStmt([NotNull] VBGrammarParser.GoSubStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.goToStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGoToStmt([NotNull] VBGrammarParser.GoToStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.goToStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGoToStmt([NotNull] VBGrammarParser.GoToStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>inlineIfThenElse</c>
	/// labeled alternative in <see cref="VBGrammarParser.ifThenElseStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInlineIfThenElse([NotNull] VBGrammarParser.InlineIfThenElseContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>inlineIfThenElse</c>
	/// labeled alternative in <see cref="VBGrammarParser.ifThenElseStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInlineIfThenElse([NotNull] VBGrammarParser.InlineIfThenElseContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>blockIfThenElse</c>
	/// labeled alternative in <see cref="VBGrammarParser.ifThenElseStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlockIfThenElse([NotNull] VBGrammarParser.BlockIfThenElseContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>blockIfThenElse</c>
	/// labeled alternative in <see cref="VBGrammarParser.ifThenElseStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlockIfThenElse([NotNull] VBGrammarParser.BlockIfThenElseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.ifBlockStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfBlockStmt([NotNull] VBGrammarParser.IfBlockStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.ifBlockStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfBlockStmt([NotNull] VBGrammarParser.IfBlockStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.ifConditionStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfConditionStmt([NotNull] VBGrammarParser.IfConditionStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.ifConditionStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfConditionStmt([NotNull] VBGrammarParser.IfConditionStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.ifElseIfBlockStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfElseIfBlockStmt([NotNull] VBGrammarParser.IfElseIfBlockStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.ifElseIfBlockStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfElseIfBlockStmt([NotNull] VBGrammarParser.IfElseIfBlockStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.ifElseBlockStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfElseBlockStmt([NotNull] VBGrammarParser.IfElseBlockStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.ifElseBlockStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfElseBlockStmt([NotNull] VBGrammarParser.IfElseBlockStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.implementsStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImplementsStmt([NotNull] VBGrammarParser.ImplementsStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.implementsStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImplementsStmt([NotNull] VBGrammarParser.ImplementsStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.inputStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInputStmt([NotNull] VBGrammarParser.InputStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.inputStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInputStmt([NotNull] VBGrammarParser.InputStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.killStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterKillStmt([NotNull] VBGrammarParser.KillStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.killStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitKillStmt([NotNull] VBGrammarParser.KillStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.letStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLetStmt([NotNull] VBGrammarParser.LetStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.letStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLetStmt([NotNull] VBGrammarParser.LetStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.lineInputStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLineInputStmt([NotNull] VBGrammarParser.LineInputStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.lineInputStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLineInputStmt([NotNull] VBGrammarParser.LineInputStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.loadStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLoadStmt([NotNull] VBGrammarParser.LoadStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.loadStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLoadStmt([NotNull] VBGrammarParser.LoadStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.lockStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLockStmt([NotNull] VBGrammarParser.LockStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.lockStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLockStmt([NotNull] VBGrammarParser.LockStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.lsetStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLsetStmt([NotNull] VBGrammarParser.LsetStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.lsetStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLsetStmt([NotNull] VBGrammarParser.LsetStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.macroConstStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMacroConstStmt([NotNull] VBGrammarParser.MacroConstStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.macroConstStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMacroConstStmt([NotNull] VBGrammarParser.MacroConstStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.macroIfThenElseStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMacroIfThenElseStmt([NotNull] VBGrammarParser.MacroIfThenElseStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.macroIfThenElseStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMacroIfThenElseStmt([NotNull] VBGrammarParser.MacroIfThenElseStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.macroIfBlockStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMacroIfBlockStmt([NotNull] VBGrammarParser.MacroIfBlockStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.macroIfBlockStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMacroIfBlockStmt([NotNull] VBGrammarParser.MacroIfBlockStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.macroElseIfBlockStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMacroElseIfBlockStmt([NotNull] VBGrammarParser.MacroElseIfBlockStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.macroElseIfBlockStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMacroElseIfBlockStmt([NotNull] VBGrammarParser.MacroElseIfBlockStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.macroElseBlockStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMacroElseBlockStmt([NotNull] VBGrammarParser.MacroElseBlockStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.macroElseBlockStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMacroElseBlockStmt([NotNull] VBGrammarParser.MacroElseBlockStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.midStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMidStmt([NotNull] VBGrammarParser.MidStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.midStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMidStmt([NotNull] VBGrammarParser.MidStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.mkdirStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMkdirStmt([NotNull] VBGrammarParser.MkdirStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.mkdirStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMkdirStmt([NotNull] VBGrammarParser.MkdirStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.nameStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNameStmt([NotNull] VBGrammarParser.NameStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.nameStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNameStmt([NotNull] VBGrammarParser.NameStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.onErrorStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOnErrorStmt([NotNull] VBGrammarParser.OnErrorStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.onErrorStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOnErrorStmt([NotNull] VBGrammarParser.OnErrorStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.onGoToStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOnGoToStmt([NotNull] VBGrammarParser.OnGoToStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.onGoToStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOnGoToStmt([NotNull] VBGrammarParser.OnGoToStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.onGoSubStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOnGoSubStmt([NotNull] VBGrammarParser.OnGoSubStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.onGoSubStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOnGoSubStmt([NotNull] VBGrammarParser.OnGoSubStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.openStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpenStmt([NotNull] VBGrammarParser.OpenStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.openStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpenStmt([NotNull] VBGrammarParser.OpenStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.outputList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOutputList([NotNull] VBGrammarParser.OutputListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.outputList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOutputList([NotNull] VBGrammarParser.OutputListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.outputList_Expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOutputList_Expression([NotNull] VBGrammarParser.OutputList_ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.outputList_Expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOutputList_Expression([NotNull] VBGrammarParser.OutputList_ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.printStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrintStmt([NotNull] VBGrammarParser.PrintStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.printStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrintStmt([NotNull] VBGrammarParser.PrintStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.propertyGetStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPropertyGetStmt([NotNull] VBGrammarParser.PropertyGetStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.propertyGetStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPropertyGetStmt([NotNull] VBGrammarParser.PropertyGetStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.propertySetStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPropertySetStmt([NotNull] VBGrammarParser.PropertySetStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.propertySetStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPropertySetStmt([NotNull] VBGrammarParser.PropertySetStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.propertyLetStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPropertyLetStmt([NotNull] VBGrammarParser.PropertyLetStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.propertyLetStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPropertyLetStmt([NotNull] VBGrammarParser.PropertyLetStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.putStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPutStmt([NotNull] VBGrammarParser.PutStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.putStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPutStmt([NotNull] VBGrammarParser.PutStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.raiseEventStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRaiseEventStmt([NotNull] VBGrammarParser.RaiseEventStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.raiseEventStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRaiseEventStmt([NotNull] VBGrammarParser.RaiseEventStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.randomizeStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRandomizeStmt([NotNull] VBGrammarParser.RandomizeStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.randomizeStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRandomizeStmt([NotNull] VBGrammarParser.RandomizeStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.redimStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRedimStmt([NotNull] VBGrammarParser.RedimStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.redimStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRedimStmt([NotNull] VBGrammarParser.RedimStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.redimSubStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRedimSubStmt([NotNull] VBGrammarParser.RedimSubStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.redimSubStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRedimSubStmt([NotNull] VBGrammarParser.RedimSubStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.resetStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterResetStmt([NotNull] VBGrammarParser.ResetStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.resetStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitResetStmt([NotNull] VBGrammarParser.ResetStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.resumeStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterResumeStmt([NotNull] VBGrammarParser.ResumeStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.resumeStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitResumeStmt([NotNull] VBGrammarParser.ResumeStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.returnStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturnStmt([NotNull] VBGrammarParser.ReturnStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.returnStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturnStmt([NotNull] VBGrammarParser.ReturnStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.rmdirStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRmdirStmt([NotNull] VBGrammarParser.RmdirStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.rmdirStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRmdirStmt([NotNull] VBGrammarParser.RmdirStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.rsetStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRsetStmt([NotNull] VBGrammarParser.RsetStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.rsetStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRsetStmt([NotNull] VBGrammarParser.RsetStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.savepictureStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSavepictureStmt([NotNull] VBGrammarParser.SavepictureStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.savepictureStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSavepictureStmt([NotNull] VBGrammarParser.SavepictureStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.saveSettingStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSaveSettingStmt([NotNull] VBGrammarParser.SaveSettingStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.saveSettingStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSaveSettingStmt([NotNull] VBGrammarParser.SaveSettingStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.seekStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSeekStmt([NotNull] VBGrammarParser.SeekStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.seekStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSeekStmt([NotNull] VBGrammarParser.SeekStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.selectCaseStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSelectCaseStmt([NotNull] VBGrammarParser.SelectCaseStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.selectCaseStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSelectCaseStmt([NotNull] VBGrammarParser.SelectCaseStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>caseCondIs</c>
	/// labeled alternative in <see cref="VBGrammarParser.sC_Selection"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCaseCondIs([NotNull] VBGrammarParser.CaseCondIsContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>caseCondIs</c>
	/// labeled alternative in <see cref="VBGrammarParser.sC_Selection"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCaseCondIs([NotNull] VBGrammarParser.CaseCondIsContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>caseCondTo</c>
	/// labeled alternative in <see cref="VBGrammarParser.sC_Selection"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCaseCondTo([NotNull] VBGrammarParser.CaseCondToContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>caseCondTo</c>
	/// labeled alternative in <see cref="VBGrammarParser.sC_Selection"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCaseCondTo([NotNull] VBGrammarParser.CaseCondToContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>caseCondValue</c>
	/// labeled alternative in <see cref="VBGrammarParser.sC_Selection"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCaseCondValue([NotNull] VBGrammarParser.CaseCondValueContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>caseCondValue</c>
	/// labeled alternative in <see cref="VBGrammarParser.sC_Selection"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCaseCondValue([NotNull] VBGrammarParser.CaseCondValueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.sC_Case"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSC_Case([NotNull] VBGrammarParser.SC_CaseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.sC_Case"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSC_Case([NotNull] VBGrammarParser.SC_CaseContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>caseCondElse</c>
	/// labeled alternative in <see cref="VBGrammarParser.sC_Cond"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCaseCondElse([NotNull] VBGrammarParser.CaseCondElseContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>caseCondElse</c>
	/// labeled alternative in <see cref="VBGrammarParser.sC_Cond"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCaseCondElse([NotNull] VBGrammarParser.CaseCondElseContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>caseCondSelection</c>
	/// labeled alternative in <see cref="VBGrammarParser.sC_Cond"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCaseCondSelection([NotNull] VBGrammarParser.CaseCondSelectionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>caseCondSelection</c>
	/// labeled alternative in <see cref="VBGrammarParser.sC_Cond"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCaseCondSelection([NotNull] VBGrammarParser.CaseCondSelectionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.sendkeysStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSendkeysStmt([NotNull] VBGrammarParser.SendkeysStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.sendkeysStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSendkeysStmt([NotNull] VBGrammarParser.SendkeysStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.setattrStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSetattrStmt([NotNull] VBGrammarParser.SetattrStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.setattrStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSetattrStmt([NotNull] VBGrammarParser.SetattrStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.setStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSetStmt([NotNull] VBGrammarParser.SetStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.setStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSetStmt([NotNull] VBGrammarParser.SetStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.stopStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStopStmt([NotNull] VBGrammarParser.StopStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.stopStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStopStmt([NotNull] VBGrammarParser.StopStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.subStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSubStmt([NotNull] VBGrammarParser.SubStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.subStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSubStmt([NotNull] VBGrammarParser.SubStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.timeStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTimeStmt([NotNull] VBGrammarParser.TimeStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.timeStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTimeStmt([NotNull] VBGrammarParser.TimeStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.typeStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeStmt([NotNull] VBGrammarParser.TypeStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.typeStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeStmt([NotNull] VBGrammarParser.TypeStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.typeStmt_Element"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeStmt_Element([NotNull] VBGrammarParser.TypeStmt_ElementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.typeStmt_Element"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeStmt_Element([NotNull] VBGrammarParser.TypeStmt_ElementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.typeOfStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeOfStmt([NotNull] VBGrammarParser.TypeOfStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.typeOfStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeOfStmt([NotNull] VBGrammarParser.TypeOfStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.unloadStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnloadStmt([NotNull] VBGrammarParser.UnloadStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.unloadStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnloadStmt([NotNull] VBGrammarParser.UnloadStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.unlockStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnlockStmt([NotNull] VBGrammarParser.UnlockStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.unlockStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnlockStmt([NotNull] VBGrammarParser.UnlockStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>vsStruct</c>
	/// labeled alternative in <see cref="VBGrammarParser.valueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVsStruct([NotNull] VBGrammarParser.VsStructContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>vsStruct</c>
	/// labeled alternative in <see cref="VBGrammarParser.valueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVsStruct([NotNull] VBGrammarParser.VsStructContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>vsAdd</c>
	/// labeled alternative in <see cref="VBGrammarParser.valueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVsAdd([NotNull] VBGrammarParser.VsAddContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>vsAdd</c>
	/// labeled alternative in <see cref="VBGrammarParser.valueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVsAdd([NotNull] VBGrammarParser.VsAddContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>vsLt</c>
	/// labeled alternative in <see cref="VBGrammarParser.valueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVsLt([NotNull] VBGrammarParser.VsLtContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>vsLt</c>
	/// labeled alternative in <see cref="VBGrammarParser.valueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVsLt([NotNull] VBGrammarParser.VsLtContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>vsAddressOf</c>
	/// labeled alternative in <see cref="VBGrammarParser.valueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVsAddressOf([NotNull] VBGrammarParser.VsAddressOfContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>vsAddressOf</c>
	/// labeled alternative in <see cref="VBGrammarParser.valueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVsAddressOf([NotNull] VBGrammarParser.VsAddressOfContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>vsNew</c>
	/// labeled alternative in <see cref="VBGrammarParser.valueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVsNew([NotNull] VBGrammarParser.VsNewContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>vsNew</c>
	/// labeled alternative in <see cref="VBGrammarParser.valueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVsNew([NotNull] VBGrammarParser.VsNewContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>vsMult</c>
	/// labeled alternative in <see cref="VBGrammarParser.valueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVsMult([NotNull] VBGrammarParser.VsMultContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>vsMult</c>
	/// labeled alternative in <see cref="VBGrammarParser.valueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVsMult([NotNull] VBGrammarParser.VsMultContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>vsNegation</c>
	/// labeled alternative in <see cref="VBGrammarParser.valueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVsNegation([NotNull] VBGrammarParser.VsNegationContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>vsNegation</c>
	/// labeled alternative in <see cref="VBGrammarParser.valueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVsNegation([NotNull] VBGrammarParser.VsNegationContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>vsAssign</c>
	/// labeled alternative in <see cref="VBGrammarParser.valueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVsAssign([NotNull] VBGrammarParser.VsAssignContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>vsAssign</c>
	/// labeled alternative in <see cref="VBGrammarParser.valueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVsAssign([NotNull] VBGrammarParser.VsAssignContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>vsLike</c>
	/// labeled alternative in <see cref="VBGrammarParser.valueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVsLike([NotNull] VBGrammarParser.VsLikeContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>vsLike</c>
	/// labeled alternative in <see cref="VBGrammarParser.valueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVsLike([NotNull] VBGrammarParser.VsLikeContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>vsDiv</c>
	/// labeled alternative in <see cref="VBGrammarParser.valueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVsDiv([NotNull] VBGrammarParser.VsDivContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>vsDiv</c>
	/// labeled alternative in <see cref="VBGrammarParser.valueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVsDiv([NotNull] VBGrammarParser.VsDivContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>vsPlus</c>
	/// labeled alternative in <see cref="VBGrammarParser.valueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVsPlus([NotNull] VBGrammarParser.VsPlusContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>vsPlus</c>
	/// labeled alternative in <see cref="VBGrammarParser.valueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVsPlus([NotNull] VBGrammarParser.VsPlusContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>vsNot</c>
	/// labeled alternative in <see cref="VBGrammarParser.valueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVsNot([NotNull] VBGrammarParser.VsNotContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>vsNot</c>
	/// labeled alternative in <see cref="VBGrammarParser.valueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVsNot([NotNull] VBGrammarParser.VsNotContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>vsGeq</c>
	/// labeled alternative in <see cref="VBGrammarParser.valueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVsGeq([NotNull] VBGrammarParser.VsGeqContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>vsGeq</c>
	/// labeled alternative in <see cref="VBGrammarParser.valueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVsGeq([NotNull] VBGrammarParser.VsGeqContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>vsTypeOf</c>
	/// labeled alternative in <see cref="VBGrammarParser.valueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVsTypeOf([NotNull] VBGrammarParser.VsTypeOfContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>vsTypeOf</c>
	/// labeled alternative in <see cref="VBGrammarParser.valueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVsTypeOf([NotNull] VBGrammarParser.VsTypeOfContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>vsICS</c>
	/// labeled alternative in <see cref="VBGrammarParser.valueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVsICS([NotNull] VBGrammarParser.VsICSContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>vsICS</c>
	/// labeled alternative in <see cref="VBGrammarParser.valueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVsICS([NotNull] VBGrammarParser.VsICSContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>vsNeq</c>
	/// labeled alternative in <see cref="VBGrammarParser.valueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVsNeq([NotNull] VBGrammarParser.VsNeqContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>vsNeq</c>
	/// labeled alternative in <see cref="VBGrammarParser.valueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVsNeq([NotNull] VBGrammarParser.VsNeqContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>vsXor</c>
	/// labeled alternative in <see cref="VBGrammarParser.valueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVsXor([NotNull] VBGrammarParser.VsXorContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>vsXor</c>
	/// labeled alternative in <see cref="VBGrammarParser.valueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVsXor([NotNull] VBGrammarParser.VsXorContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>vsAnd</c>
	/// labeled alternative in <see cref="VBGrammarParser.valueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVsAnd([NotNull] VBGrammarParser.VsAndContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>vsAnd</c>
	/// labeled alternative in <see cref="VBGrammarParser.valueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVsAnd([NotNull] VBGrammarParser.VsAndContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>vsLeq</c>
	/// labeled alternative in <see cref="VBGrammarParser.valueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVsLeq([NotNull] VBGrammarParser.VsLeqContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>vsLeq</c>
	/// labeled alternative in <see cref="VBGrammarParser.valueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVsLeq([NotNull] VBGrammarParser.VsLeqContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>vsPow</c>
	/// labeled alternative in <see cref="VBGrammarParser.valueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVsPow([NotNull] VBGrammarParser.VsPowContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>vsPow</c>
	/// labeled alternative in <see cref="VBGrammarParser.valueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVsPow([NotNull] VBGrammarParser.VsPowContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>vsIs</c>
	/// labeled alternative in <see cref="VBGrammarParser.valueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVsIs([NotNull] VBGrammarParser.VsIsContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>vsIs</c>
	/// labeled alternative in <see cref="VBGrammarParser.valueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVsIs([NotNull] VBGrammarParser.VsIsContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>vsMod</c>
	/// labeled alternative in <see cref="VBGrammarParser.valueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVsMod([NotNull] VBGrammarParser.VsModContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>vsMod</c>
	/// labeled alternative in <see cref="VBGrammarParser.valueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVsMod([NotNull] VBGrammarParser.VsModContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>vsAmp</c>
	/// labeled alternative in <see cref="VBGrammarParser.valueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVsAmp([NotNull] VBGrammarParser.VsAmpContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>vsAmp</c>
	/// labeled alternative in <see cref="VBGrammarParser.valueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVsAmp([NotNull] VBGrammarParser.VsAmpContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>vsOr</c>
	/// labeled alternative in <see cref="VBGrammarParser.valueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVsOr([NotNull] VBGrammarParser.VsOrContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>vsOr</c>
	/// labeled alternative in <see cref="VBGrammarParser.valueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVsOr([NotNull] VBGrammarParser.VsOrContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>vsMinus</c>
	/// labeled alternative in <see cref="VBGrammarParser.valueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVsMinus([NotNull] VBGrammarParser.VsMinusContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>vsMinus</c>
	/// labeled alternative in <see cref="VBGrammarParser.valueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVsMinus([NotNull] VBGrammarParser.VsMinusContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>vsLiteral</c>
	/// labeled alternative in <see cref="VBGrammarParser.valueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVsLiteral([NotNull] VBGrammarParser.VsLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>vsLiteral</c>
	/// labeled alternative in <see cref="VBGrammarParser.valueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVsLiteral([NotNull] VBGrammarParser.VsLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>vsEqv</c>
	/// labeled alternative in <see cref="VBGrammarParser.valueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVsEqv([NotNull] VBGrammarParser.VsEqvContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>vsEqv</c>
	/// labeled alternative in <see cref="VBGrammarParser.valueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVsEqv([NotNull] VBGrammarParser.VsEqvContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>vsImp</c>
	/// labeled alternative in <see cref="VBGrammarParser.valueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVsImp([NotNull] VBGrammarParser.VsImpContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>vsImp</c>
	/// labeled alternative in <see cref="VBGrammarParser.valueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVsImp([NotNull] VBGrammarParser.VsImpContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>vsGt</c>
	/// labeled alternative in <see cref="VBGrammarParser.valueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVsGt([NotNull] VBGrammarParser.VsGtContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>vsGt</c>
	/// labeled alternative in <see cref="VBGrammarParser.valueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVsGt([NotNull] VBGrammarParser.VsGtContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>vsEq</c>
	/// labeled alternative in <see cref="VBGrammarParser.valueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVsEq([NotNull] VBGrammarParser.VsEqContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>vsEq</c>
	/// labeled alternative in <see cref="VBGrammarParser.valueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVsEq([NotNull] VBGrammarParser.VsEqContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>vsMid</c>
	/// labeled alternative in <see cref="VBGrammarParser.valueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVsMid([NotNull] VBGrammarParser.VsMidContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>vsMid</c>
	/// labeled alternative in <see cref="VBGrammarParser.valueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVsMid([NotNull] VBGrammarParser.VsMidContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.variableStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableStmt([NotNull] VBGrammarParser.VariableStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.variableStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableStmt([NotNull] VBGrammarParser.VariableStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.variableListStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableListStmt([NotNull] VBGrammarParser.VariableListStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.variableListStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableListStmt([NotNull] VBGrammarParser.VariableListStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.variableSubStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableSubStmt([NotNull] VBGrammarParser.VariableSubStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.variableSubStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableSubStmt([NotNull] VBGrammarParser.VariableSubStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.whileWendStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhileWendStmt([NotNull] VBGrammarParser.WhileWendStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.whileWendStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhileWendStmt([NotNull] VBGrammarParser.WhileWendStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.widthStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWidthStmt([NotNull] VBGrammarParser.WidthStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.widthStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWidthStmt([NotNull] VBGrammarParser.WidthStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.withStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWithStmt([NotNull] VBGrammarParser.WithStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.withStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWithStmt([NotNull] VBGrammarParser.WithStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.writeStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWriteStmt([NotNull] VBGrammarParser.WriteStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.writeStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWriteStmt([NotNull] VBGrammarParser.WriteStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.fileNumber"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFileNumber([NotNull] VBGrammarParser.FileNumberContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.fileNumber"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFileNumber([NotNull] VBGrammarParser.FileNumberContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.explicitCallStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExplicitCallStmt([NotNull] VBGrammarParser.ExplicitCallStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.explicitCallStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExplicitCallStmt([NotNull] VBGrammarParser.ExplicitCallStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.eCS_ProcedureCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterECS_ProcedureCall([NotNull] VBGrammarParser.ECS_ProcedureCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.eCS_ProcedureCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitECS_ProcedureCall([NotNull] VBGrammarParser.ECS_ProcedureCallContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.eCS_MemberProcedureCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterECS_MemberProcedureCall([NotNull] VBGrammarParser.ECS_MemberProcedureCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.eCS_MemberProcedureCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitECS_MemberProcedureCall([NotNull] VBGrammarParser.ECS_MemberProcedureCallContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.implicitCallStmt_InBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImplicitCallStmt_InBlock([NotNull] VBGrammarParser.ImplicitCallStmt_InBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.implicitCallStmt_InBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImplicitCallStmt_InBlock([NotNull] VBGrammarParser.ImplicitCallStmt_InBlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.iCS_B_MemberProcedureCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterICS_B_MemberProcedureCall([NotNull] VBGrammarParser.ICS_B_MemberProcedureCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.iCS_B_MemberProcedureCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitICS_B_MemberProcedureCall([NotNull] VBGrammarParser.ICS_B_MemberProcedureCallContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.iCS_B_ProcedureCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterICS_B_ProcedureCall([NotNull] VBGrammarParser.ICS_B_ProcedureCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.iCS_B_ProcedureCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitICS_B_ProcedureCall([NotNull] VBGrammarParser.ICS_B_ProcedureCallContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.implicitCallStmt_InStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImplicitCallStmt_InStmt([NotNull] VBGrammarParser.ImplicitCallStmt_InStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.implicitCallStmt_InStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImplicitCallStmt_InStmt([NotNull] VBGrammarParser.ImplicitCallStmt_InStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.iCS_S_VariableOrProcedureCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterICS_S_VariableOrProcedureCall([NotNull] VBGrammarParser.ICS_S_VariableOrProcedureCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.iCS_S_VariableOrProcedureCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitICS_S_VariableOrProcedureCall([NotNull] VBGrammarParser.ICS_S_VariableOrProcedureCallContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.iCS_S_ProcedureOrArrayCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterICS_S_ProcedureOrArrayCall([NotNull] VBGrammarParser.ICS_S_ProcedureOrArrayCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.iCS_S_ProcedureOrArrayCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitICS_S_ProcedureOrArrayCall([NotNull] VBGrammarParser.ICS_S_ProcedureOrArrayCallContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.iCS_S_MembersCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterICS_S_MembersCall([NotNull] VBGrammarParser.ICS_S_MembersCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.iCS_S_MembersCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitICS_S_MembersCall([NotNull] VBGrammarParser.ICS_S_MembersCallContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.iCS_S_MemberCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterICS_S_MemberCall([NotNull] VBGrammarParser.ICS_S_MemberCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.iCS_S_MemberCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitICS_S_MemberCall([NotNull] VBGrammarParser.ICS_S_MemberCallContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.iCS_S_DictionaryCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterICS_S_DictionaryCall([NotNull] VBGrammarParser.ICS_S_DictionaryCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.iCS_S_DictionaryCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitICS_S_DictionaryCall([NotNull] VBGrammarParser.ICS_S_DictionaryCallContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.argsCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgsCall([NotNull] VBGrammarParser.ArgsCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.argsCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgsCall([NotNull] VBGrammarParser.ArgsCallContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.argCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgCall([NotNull] VBGrammarParser.ArgCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.argCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgCall([NotNull] VBGrammarParser.ArgCallContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.dictionaryCallStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDictionaryCallStmt([NotNull] VBGrammarParser.DictionaryCallStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.dictionaryCallStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDictionaryCallStmt([NotNull] VBGrammarParser.DictionaryCallStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.argList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgList([NotNull] VBGrammarParser.ArgListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.argList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgList([NotNull] VBGrammarParser.ArgListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.arg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArg([NotNull] VBGrammarParser.ArgContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.arg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArg([NotNull] VBGrammarParser.ArgContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.argDefaultValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgDefaultValue([NotNull] VBGrammarParser.ArgDefaultValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.argDefaultValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgDefaultValue([NotNull] VBGrammarParser.ArgDefaultValueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.subscripts"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSubscripts([NotNull] VBGrammarParser.SubscriptsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.subscripts"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSubscripts([NotNull] VBGrammarParser.SubscriptsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.subscript"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSubscript([NotNull] VBGrammarParser.SubscriptContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.subscript"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSubscript([NotNull] VBGrammarParser.SubscriptContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.ambiguousIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAmbiguousIdentifier([NotNull] VBGrammarParser.AmbiguousIdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.ambiguousIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAmbiguousIdentifier([NotNull] VBGrammarParser.AmbiguousIdentifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.asTypeClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAsTypeClause([NotNull] VBGrammarParser.AsTypeClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.asTypeClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAsTypeClause([NotNull] VBGrammarParser.AsTypeClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.baseType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBaseType([NotNull] VBGrammarParser.BaseTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.baseType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBaseType([NotNull] VBGrammarParser.BaseTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.certainIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCertainIdentifier([NotNull] VBGrammarParser.CertainIdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.certainIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCertainIdentifier([NotNull] VBGrammarParser.CertainIdentifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.comparisonOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComparisonOperator([NotNull] VBGrammarParser.ComparisonOperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.comparisonOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComparisonOperator([NotNull] VBGrammarParser.ComparisonOperatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.complexType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComplexType([NotNull] VBGrammarParser.ComplexTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.complexType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComplexType([NotNull] VBGrammarParser.ComplexTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.fieldLength"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFieldLength([NotNull] VBGrammarParser.FieldLengthContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.fieldLength"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFieldLength([NotNull] VBGrammarParser.FieldLengthContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.letterrange"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLetterrange([NotNull] VBGrammarParser.LetterrangeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.letterrange"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLetterrange([NotNull] VBGrammarParser.LetterrangeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.lineLabel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLineLabel([NotNull] VBGrammarParser.LineLabelContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.lineLabel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLineLabel([NotNull] VBGrammarParser.LineLabelContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteral([NotNull] VBGrammarParser.LiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteral([NotNull] VBGrammarParser.LiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType([NotNull] VBGrammarParser.TypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType([NotNull] VBGrammarParser.TypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.typeHint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeHint([NotNull] VBGrammarParser.TypeHintContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.typeHint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeHint([NotNull] VBGrammarParser.TypeHintContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.visibility"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVisibility([NotNull] VBGrammarParser.VisibilityContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.visibility"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVisibility([NotNull] VBGrammarParser.VisibilityContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.ambiguousKeyword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAmbiguousKeyword([NotNull] VBGrammarParser.AmbiguousKeywordContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.ambiguousKeyword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAmbiguousKeyword([NotNull] VBGrammarParser.AmbiguousKeywordContext context);
}
