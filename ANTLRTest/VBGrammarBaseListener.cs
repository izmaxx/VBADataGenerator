//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from VBGrammar.g4 by ANTLR 4.5.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IVBGrammarListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.1")]
[System.CLSCompliant(false)]
public partial class VBGrammarBaseListener : IVBGrammarListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.startRule"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStartRule([NotNull] VBGrammarParser.StartRuleContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.startRule"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStartRule([NotNull] VBGrammarParser.StartRuleContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.module"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModule([NotNull] VBGrammarParser.ModuleContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.module"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModule([NotNull] VBGrammarParser.ModuleContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.moduleHeader"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModuleHeader([NotNull] VBGrammarParser.ModuleHeaderContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.moduleHeader"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModuleHeader([NotNull] VBGrammarParser.ModuleHeaderContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.moduleConfig"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModuleConfig([NotNull] VBGrammarParser.ModuleConfigContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.moduleConfig"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModuleConfig([NotNull] VBGrammarParser.ModuleConfigContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.moduleConfigElement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModuleConfigElement([NotNull] VBGrammarParser.ModuleConfigElementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.moduleConfigElement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModuleConfigElement([NotNull] VBGrammarParser.ModuleConfigElementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.moduleAttributes"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModuleAttributes([NotNull] VBGrammarParser.ModuleAttributesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.moduleAttributes"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModuleAttributes([NotNull] VBGrammarParser.ModuleAttributesContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.moduleDeclarations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModuleDeclarations([NotNull] VBGrammarParser.ModuleDeclarationsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.moduleDeclarations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModuleDeclarations([NotNull] VBGrammarParser.ModuleDeclarationsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.optionBaseStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOptionBaseStmt([NotNull] VBGrammarParser.OptionBaseStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.optionBaseStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOptionBaseStmt([NotNull] VBGrammarParser.OptionBaseStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.optionCompareStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOptionCompareStmt([NotNull] VBGrammarParser.OptionCompareStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.optionCompareStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOptionCompareStmt([NotNull] VBGrammarParser.OptionCompareStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.optionExplicitStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOptionExplicitStmt([NotNull] VBGrammarParser.OptionExplicitStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.optionExplicitStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOptionExplicitStmt([NotNull] VBGrammarParser.OptionExplicitStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.optionPrivateModuleStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOptionPrivateModuleStmt([NotNull] VBGrammarParser.OptionPrivateModuleStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.optionPrivateModuleStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOptionPrivateModuleStmt([NotNull] VBGrammarParser.OptionPrivateModuleStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.moduleDeclarationsElement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModuleDeclarationsElement([NotNull] VBGrammarParser.ModuleDeclarationsElementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.moduleDeclarationsElement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModuleDeclarationsElement([NotNull] VBGrammarParser.ModuleDeclarationsElementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.moduleBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModuleBody([NotNull] VBGrammarParser.ModuleBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.moduleBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModuleBody([NotNull] VBGrammarParser.ModuleBodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.moduleBodyElement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModuleBodyElement([NotNull] VBGrammarParser.ModuleBodyElementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.moduleBodyElement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModuleBodyElement([NotNull] VBGrammarParser.ModuleBodyElementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.moduleBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModuleBlock([NotNull] VBGrammarParser.ModuleBlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.moduleBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModuleBlock([NotNull] VBGrammarParser.ModuleBlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.attributeStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAttributeStmt([NotNull] VBGrammarParser.AttributeStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.attributeStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAttributeStmt([NotNull] VBGrammarParser.AttributeStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlock([NotNull] VBGrammarParser.BlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlock([NotNull] VBGrammarParser.BlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.blockStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlockStmt([NotNull] VBGrammarParser.BlockStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.blockStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlockStmt([NotNull] VBGrammarParser.BlockStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.appactivateStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAppactivateStmt([NotNull] VBGrammarParser.AppactivateStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.appactivateStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAppactivateStmt([NotNull] VBGrammarParser.AppactivateStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.beepStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBeepStmt([NotNull] VBGrammarParser.BeepStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.beepStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBeepStmt([NotNull] VBGrammarParser.BeepStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.chdirStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterChdirStmt([NotNull] VBGrammarParser.ChdirStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.chdirStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitChdirStmt([NotNull] VBGrammarParser.ChdirStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.chdriveStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterChdriveStmt([NotNull] VBGrammarParser.ChdriveStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.chdriveStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitChdriveStmt([NotNull] VBGrammarParser.ChdriveStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.closeStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCloseStmt([NotNull] VBGrammarParser.CloseStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.closeStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCloseStmt([NotNull] VBGrammarParser.CloseStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.constStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstStmt([NotNull] VBGrammarParser.ConstStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.constStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstStmt([NotNull] VBGrammarParser.ConstStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.constSubStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstSubStmt([NotNull] VBGrammarParser.ConstSubStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.constSubStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstSubStmt([NotNull] VBGrammarParser.ConstSubStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.dateStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDateStmt([NotNull] VBGrammarParser.DateStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.dateStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDateStmt([NotNull] VBGrammarParser.DateStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.declareStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeclareStmt([NotNull] VBGrammarParser.DeclareStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.declareStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeclareStmt([NotNull] VBGrammarParser.DeclareStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.deftypeStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeftypeStmt([NotNull] VBGrammarParser.DeftypeStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.deftypeStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeftypeStmt([NotNull] VBGrammarParser.DeftypeStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.deleteSettingStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeleteSettingStmt([NotNull] VBGrammarParser.DeleteSettingStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.deleteSettingStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeleteSettingStmt([NotNull] VBGrammarParser.DeleteSettingStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.doLoopStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDoLoopStmt([NotNull] VBGrammarParser.DoLoopStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.doLoopStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDoLoopStmt([NotNull] VBGrammarParser.DoLoopStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.endStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEndStmt([NotNull] VBGrammarParser.EndStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.endStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEndStmt([NotNull] VBGrammarParser.EndStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.enumerationStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnumerationStmt([NotNull] VBGrammarParser.EnumerationStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.enumerationStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnumerationStmt([NotNull] VBGrammarParser.EnumerationStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.enumerationStmt_Constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnumerationStmt_Constant([NotNull] VBGrammarParser.EnumerationStmt_ConstantContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.enumerationStmt_Constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnumerationStmt_Constant([NotNull] VBGrammarParser.EnumerationStmt_ConstantContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.eraseStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEraseStmt([NotNull] VBGrammarParser.EraseStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.eraseStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEraseStmt([NotNull] VBGrammarParser.EraseStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.errorStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterErrorStmt([NotNull] VBGrammarParser.ErrorStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.errorStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitErrorStmt([NotNull] VBGrammarParser.ErrorStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.eventStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEventStmt([NotNull] VBGrammarParser.EventStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.eventStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEventStmt([NotNull] VBGrammarParser.EventStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.exitStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExitStmt([NotNull] VBGrammarParser.ExitStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.exitStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExitStmt([NotNull] VBGrammarParser.ExitStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.filecopyStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFilecopyStmt([NotNull] VBGrammarParser.FilecopyStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.filecopyStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFilecopyStmt([NotNull] VBGrammarParser.FilecopyStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.forEachStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForEachStmt([NotNull] VBGrammarParser.ForEachStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.forEachStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForEachStmt([NotNull] VBGrammarParser.ForEachStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.forNextStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForNextStmt([NotNull] VBGrammarParser.ForNextStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.forNextStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForNextStmt([NotNull] VBGrammarParser.ForNextStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.functionStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionStmt([NotNull] VBGrammarParser.FunctionStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.functionStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionStmt([NotNull] VBGrammarParser.FunctionStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.getStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGetStmt([NotNull] VBGrammarParser.GetStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.getStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGetStmt([NotNull] VBGrammarParser.GetStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.goSubStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGoSubStmt([NotNull] VBGrammarParser.GoSubStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.goSubStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGoSubStmt([NotNull] VBGrammarParser.GoSubStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.goToStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGoToStmt([NotNull] VBGrammarParser.GoToStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.goToStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGoToStmt([NotNull] VBGrammarParser.GoToStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.inlineIfThenElse"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInlineIfThenElse([NotNull] VBGrammarParser.InlineIfThenElseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.inlineIfThenElse"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInlineIfThenElse([NotNull] VBGrammarParser.InlineIfThenElseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.blockIfThenElse"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlockIfThenElse([NotNull] VBGrammarParser.BlockIfThenElseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.blockIfThenElse"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlockIfThenElse([NotNull] VBGrammarParser.BlockIfThenElseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.ifBlockStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfBlockStmt([NotNull] VBGrammarParser.IfBlockStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.ifBlockStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfBlockStmt([NotNull] VBGrammarParser.IfBlockStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.ifConditionStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfConditionStmt([NotNull] VBGrammarParser.IfConditionStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.ifConditionStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfConditionStmt([NotNull] VBGrammarParser.IfConditionStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.ifElseIfBlockStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfElseIfBlockStmt([NotNull] VBGrammarParser.IfElseIfBlockStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.ifElseIfBlockStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfElseIfBlockStmt([NotNull] VBGrammarParser.IfElseIfBlockStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.ifElseBlockStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfElseBlockStmt([NotNull] VBGrammarParser.IfElseBlockStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.ifElseBlockStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfElseBlockStmt([NotNull] VBGrammarParser.IfElseBlockStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.implementsStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterImplementsStmt([NotNull] VBGrammarParser.ImplementsStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.implementsStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitImplementsStmt([NotNull] VBGrammarParser.ImplementsStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.inputStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInputStmt([NotNull] VBGrammarParser.InputStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.inputStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInputStmt([NotNull] VBGrammarParser.InputStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.killStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterKillStmt([NotNull] VBGrammarParser.KillStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.killStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitKillStmt([NotNull] VBGrammarParser.KillStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.letStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLetStmt([NotNull] VBGrammarParser.LetStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.letStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLetStmt([NotNull] VBGrammarParser.LetStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.lineInputStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLineInputStmt([NotNull] VBGrammarParser.LineInputStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.lineInputStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLineInputStmt([NotNull] VBGrammarParser.LineInputStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.loadStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLoadStmt([NotNull] VBGrammarParser.LoadStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.loadStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLoadStmt([NotNull] VBGrammarParser.LoadStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.lockStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLockStmt([NotNull] VBGrammarParser.LockStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.lockStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLockStmt([NotNull] VBGrammarParser.LockStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.lsetStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLsetStmt([NotNull] VBGrammarParser.LsetStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.lsetStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLsetStmt([NotNull] VBGrammarParser.LsetStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.macroConstStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMacroConstStmt([NotNull] VBGrammarParser.MacroConstStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.macroConstStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMacroConstStmt([NotNull] VBGrammarParser.MacroConstStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.macroIfThenElseStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMacroIfThenElseStmt([NotNull] VBGrammarParser.MacroIfThenElseStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.macroIfThenElseStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMacroIfThenElseStmt([NotNull] VBGrammarParser.MacroIfThenElseStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.macroIfBlockStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMacroIfBlockStmt([NotNull] VBGrammarParser.MacroIfBlockStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.macroIfBlockStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMacroIfBlockStmt([NotNull] VBGrammarParser.MacroIfBlockStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.macroElseIfBlockStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMacroElseIfBlockStmt([NotNull] VBGrammarParser.MacroElseIfBlockStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.macroElseIfBlockStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMacroElseIfBlockStmt([NotNull] VBGrammarParser.MacroElseIfBlockStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.macroElseBlockStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMacroElseBlockStmt([NotNull] VBGrammarParser.MacroElseBlockStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.macroElseBlockStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMacroElseBlockStmt([NotNull] VBGrammarParser.MacroElseBlockStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.midStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMidStmt([NotNull] VBGrammarParser.MidStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.midStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMidStmt([NotNull] VBGrammarParser.MidStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.mkdirStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMkdirStmt([NotNull] VBGrammarParser.MkdirStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.mkdirStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMkdirStmt([NotNull] VBGrammarParser.MkdirStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.nameStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNameStmt([NotNull] VBGrammarParser.NameStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.nameStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNameStmt([NotNull] VBGrammarParser.NameStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.onErrorStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOnErrorStmt([NotNull] VBGrammarParser.OnErrorStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.onErrorStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOnErrorStmt([NotNull] VBGrammarParser.OnErrorStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.onGoToStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOnGoToStmt([NotNull] VBGrammarParser.OnGoToStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.onGoToStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOnGoToStmt([NotNull] VBGrammarParser.OnGoToStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.onGoSubStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOnGoSubStmt([NotNull] VBGrammarParser.OnGoSubStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.onGoSubStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOnGoSubStmt([NotNull] VBGrammarParser.OnGoSubStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.openStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOpenStmt([NotNull] VBGrammarParser.OpenStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.openStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOpenStmt([NotNull] VBGrammarParser.OpenStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.outputList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOutputList([NotNull] VBGrammarParser.OutputListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.outputList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOutputList([NotNull] VBGrammarParser.OutputListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.outputList_Expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOutputList_Expression([NotNull] VBGrammarParser.OutputList_ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.outputList_Expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOutputList_Expression([NotNull] VBGrammarParser.OutputList_ExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.printStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrintStmt([NotNull] VBGrammarParser.PrintStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.printStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrintStmt([NotNull] VBGrammarParser.PrintStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.propertyGetStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPropertyGetStmt([NotNull] VBGrammarParser.PropertyGetStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.propertyGetStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPropertyGetStmt([NotNull] VBGrammarParser.PropertyGetStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.propertySetStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPropertySetStmt([NotNull] VBGrammarParser.PropertySetStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.propertySetStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPropertySetStmt([NotNull] VBGrammarParser.PropertySetStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.propertyLetStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPropertyLetStmt([NotNull] VBGrammarParser.PropertyLetStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.propertyLetStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPropertyLetStmt([NotNull] VBGrammarParser.PropertyLetStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.putStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPutStmt([NotNull] VBGrammarParser.PutStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.putStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPutStmt([NotNull] VBGrammarParser.PutStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.raiseEventStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRaiseEventStmt([NotNull] VBGrammarParser.RaiseEventStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.raiseEventStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRaiseEventStmt([NotNull] VBGrammarParser.RaiseEventStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.randomizeStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRandomizeStmt([NotNull] VBGrammarParser.RandomizeStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.randomizeStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRandomizeStmt([NotNull] VBGrammarParser.RandomizeStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.redimStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRedimStmt([NotNull] VBGrammarParser.RedimStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.redimStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRedimStmt([NotNull] VBGrammarParser.RedimStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.redimSubStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRedimSubStmt([NotNull] VBGrammarParser.RedimSubStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.redimSubStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRedimSubStmt([NotNull] VBGrammarParser.RedimSubStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.resetStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterResetStmt([NotNull] VBGrammarParser.ResetStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.resetStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitResetStmt([NotNull] VBGrammarParser.ResetStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.resumeStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterResumeStmt([NotNull] VBGrammarParser.ResumeStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.resumeStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitResumeStmt([NotNull] VBGrammarParser.ResumeStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.returnStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturnStmt([NotNull] VBGrammarParser.ReturnStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.returnStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturnStmt([NotNull] VBGrammarParser.ReturnStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.rmdirStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRmdirStmt([NotNull] VBGrammarParser.RmdirStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.rmdirStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRmdirStmt([NotNull] VBGrammarParser.RmdirStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.rsetStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRsetStmt([NotNull] VBGrammarParser.RsetStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.rsetStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRsetStmt([NotNull] VBGrammarParser.RsetStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.savepictureStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSavepictureStmt([NotNull] VBGrammarParser.SavepictureStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.savepictureStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSavepictureStmt([NotNull] VBGrammarParser.SavepictureStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.saveSettingStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSaveSettingStmt([NotNull] VBGrammarParser.SaveSettingStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.saveSettingStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSaveSettingStmt([NotNull] VBGrammarParser.SaveSettingStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.seekStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSeekStmt([NotNull] VBGrammarParser.SeekStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.seekStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSeekStmt([NotNull] VBGrammarParser.SeekStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.selectCaseStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSelectCaseStmt([NotNull] VBGrammarParser.SelectCaseStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.selectCaseStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSelectCaseStmt([NotNull] VBGrammarParser.SelectCaseStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.caseCondIs"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCaseCondIs([NotNull] VBGrammarParser.CaseCondIsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.caseCondIs"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCaseCondIs([NotNull] VBGrammarParser.CaseCondIsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.caseCondTo"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCaseCondTo([NotNull] VBGrammarParser.CaseCondToContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.caseCondTo"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCaseCondTo([NotNull] VBGrammarParser.CaseCondToContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.caseCondValue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCaseCondValue([NotNull] VBGrammarParser.CaseCondValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.caseCondValue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCaseCondValue([NotNull] VBGrammarParser.CaseCondValueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.sC_Case"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSC_Case([NotNull] VBGrammarParser.SC_CaseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.sC_Case"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSC_Case([NotNull] VBGrammarParser.SC_CaseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.caseCondElse"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCaseCondElse([NotNull] VBGrammarParser.CaseCondElseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.caseCondElse"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCaseCondElse([NotNull] VBGrammarParser.CaseCondElseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.caseCondSelection"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCaseCondSelection([NotNull] VBGrammarParser.CaseCondSelectionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.caseCondSelection"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCaseCondSelection([NotNull] VBGrammarParser.CaseCondSelectionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.sendkeysStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSendkeysStmt([NotNull] VBGrammarParser.SendkeysStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.sendkeysStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSendkeysStmt([NotNull] VBGrammarParser.SendkeysStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.setattrStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSetattrStmt([NotNull] VBGrammarParser.SetattrStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.setattrStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSetattrStmt([NotNull] VBGrammarParser.SetattrStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.setStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSetStmt([NotNull] VBGrammarParser.SetStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.setStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSetStmt([NotNull] VBGrammarParser.SetStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.stopStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStopStmt([NotNull] VBGrammarParser.StopStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.stopStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStopStmt([NotNull] VBGrammarParser.StopStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.subStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubStmt([NotNull] VBGrammarParser.SubStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.subStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubStmt([NotNull] VBGrammarParser.SubStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.timeStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTimeStmt([NotNull] VBGrammarParser.TimeStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.timeStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTimeStmt([NotNull] VBGrammarParser.TimeStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.typeStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeStmt([NotNull] VBGrammarParser.TypeStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.typeStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeStmt([NotNull] VBGrammarParser.TypeStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.typeStmt_Element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeStmt_Element([NotNull] VBGrammarParser.TypeStmt_ElementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.typeStmt_Element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeStmt_Element([NotNull] VBGrammarParser.TypeStmt_ElementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.typeOfStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeOfStmt([NotNull] VBGrammarParser.TypeOfStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.typeOfStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeOfStmt([NotNull] VBGrammarParser.TypeOfStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.unloadStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnloadStmt([NotNull] VBGrammarParser.UnloadStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.unloadStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnloadStmt([NotNull] VBGrammarParser.UnloadStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.unlockStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnlockStmt([NotNull] VBGrammarParser.UnlockStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.unlockStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnlockStmt([NotNull] VBGrammarParser.UnlockStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.vsStruct"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVsStruct([NotNull] VBGrammarParser.VsStructContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.vsStruct"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVsStruct([NotNull] VBGrammarParser.VsStructContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.vsAdd"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVsAdd([NotNull] VBGrammarParser.VsAddContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.vsAdd"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVsAdd([NotNull] VBGrammarParser.VsAddContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.vsLt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVsLt([NotNull] VBGrammarParser.VsLtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.vsLt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVsLt([NotNull] VBGrammarParser.VsLtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.vsAddressOf"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVsAddressOf([NotNull] VBGrammarParser.VsAddressOfContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.vsAddressOf"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVsAddressOf([NotNull] VBGrammarParser.VsAddressOfContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.vsNew"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVsNew([NotNull] VBGrammarParser.VsNewContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.vsNew"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVsNew([NotNull] VBGrammarParser.VsNewContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.vsMult"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVsMult([NotNull] VBGrammarParser.VsMultContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.vsMult"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVsMult([NotNull] VBGrammarParser.VsMultContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.vsNegation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVsNegation([NotNull] VBGrammarParser.VsNegationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.vsNegation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVsNegation([NotNull] VBGrammarParser.VsNegationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.vsAssign"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVsAssign([NotNull] VBGrammarParser.VsAssignContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.vsAssign"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVsAssign([NotNull] VBGrammarParser.VsAssignContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.vsLike"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVsLike([NotNull] VBGrammarParser.VsLikeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.vsLike"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVsLike([NotNull] VBGrammarParser.VsLikeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.vsDiv"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVsDiv([NotNull] VBGrammarParser.VsDivContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.vsDiv"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVsDiv([NotNull] VBGrammarParser.VsDivContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.vsPlus"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVsPlus([NotNull] VBGrammarParser.VsPlusContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.vsPlus"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVsPlus([NotNull] VBGrammarParser.VsPlusContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.vsNot"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVsNot([NotNull] VBGrammarParser.VsNotContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.vsNot"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVsNot([NotNull] VBGrammarParser.VsNotContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.vsGeq"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVsGeq([NotNull] VBGrammarParser.VsGeqContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.vsGeq"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVsGeq([NotNull] VBGrammarParser.VsGeqContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.vsTypeOf"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVsTypeOf([NotNull] VBGrammarParser.VsTypeOfContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.vsTypeOf"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVsTypeOf([NotNull] VBGrammarParser.VsTypeOfContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.vsICS"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVsICS([NotNull] VBGrammarParser.VsICSContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.vsICS"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVsICS([NotNull] VBGrammarParser.VsICSContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.vsNeq"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVsNeq([NotNull] VBGrammarParser.VsNeqContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.vsNeq"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVsNeq([NotNull] VBGrammarParser.VsNeqContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.vsXor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVsXor([NotNull] VBGrammarParser.VsXorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.vsXor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVsXor([NotNull] VBGrammarParser.VsXorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.vsAnd"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVsAnd([NotNull] VBGrammarParser.VsAndContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.vsAnd"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVsAnd([NotNull] VBGrammarParser.VsAndContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.vsLeq"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVsLeq([NotNull] VBGrammarParser.VsLeqContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.vsLeq"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVsLeq([NotNull] VBGrammarParser.VsLeqContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.vsPow"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVsPow([NotNull] VBGrammarParser.VsPowContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.vsPow"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVsPow([NotNull] VBGrammarParser.VsPowContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.vsIs"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVsIs([NotNull] VBGrammarParser.VsIsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.vsIs"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVsIs([NotNull] VBGrammarParser.VsIsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.vsMod"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVsMod([NotNull] VBGrammarParser.VsModContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.vsMod"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVsMod([NotNull] VBGrammarParser.VsModContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.vsAmp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVsAmp([NotNull] VBGrammarParser.VsAmpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.vsAmp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVsAmp([NotNull] VBGrammarParser.VsAmpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.vsOr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVsOr([NotNull] VBGrammarParser.VsOrContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.vsOr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVsOr([NotNull] VBGrammarParser.VsOrContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.vsMinus"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVsMinus([NotNull] VBGrammarParser.VsMinusContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.vsMinus"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVsMinus([NotNull] VBGrammarParser.VsMinusContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.vsLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVsLiteral([NotNull] VBGrammarParser.VsLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.vsLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVsLiteral([NotNull] VBGrammarParser.VsLiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.vsEqv"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVsEqv([NotNull] VBGrammarParser.VsEqvContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.vsEqv"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVsEqv([NotNull] VBGrammarParser.VsEqvContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.vsImp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVsImp([NotNull] VBGrammarParser.VsImpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.vsImp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVsImp([NotNull] VBGrammarParser.VsImpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.vsGt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVsGt([NotNull] VBGrammarParser.VsGtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.vsGt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVsGt([NotNull] VBGrammarParser.VsGtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.vsEq"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVsEq([NotNull] VBGrammarParser.VsEqContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.vsEq"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVsEq([NotNull] VBGrammarParser.VsEqContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.vsMid"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVsMid([NotNull] VBGrammarParser.VsMidContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.vsMid"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVsMid([NotNull] VBGrammarParser.VsMidContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.variableStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableStmt([NotNull] VBGrammarParser.VariableStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.variableStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableStmt([NotNull] VBGrammarParser.VariableStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.variableListStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableListStmt([NotNull] VBGrammarParser.VariableListStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.variableListStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableListStmt([NotNull] VBGrammarParser.VariableListStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.variableSubStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableSubStmt([NotNull] VBGrammarParser.VariableSubStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.variableSubStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableSubStmt([NotNull] VBGrammarParser.VariableSubStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.whileWendStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhileWendStmt([NotNull] VBGrammarParser.WhileWendStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.whileWendStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhileWendStmt([NotNull] VBGrammarParser.WhileWendStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.widthStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWidthStmt([NotNull] VBGrammarParser.WidthStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.widthStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWidthStmt([NotNull] VBGrammarParser.WidthStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.withStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWithStmt([NotNull] VBGrammarParser.WithStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.withStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWithStmt([NotNull] VBGrammarParser.WithStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.writeStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWriteStmt([NotNull] VBGrammarParser.WriteStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.writeStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWriteStmt([NotNull] VBGrammarParser.WriteStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.fileNumber"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFileNumber([NotNull] VBGrammarParser.FileNumberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.fileNumber"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFileNumber([NotNull] VBGrammarParser.FileNumberContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.explicitCallStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExplicitCallStmt([NotNull] VBGrammarParser.ExplicitCallStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.explicitCallStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExplicitCallStmt([NotNull] VBGrammarParser.ExplicitCallStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.eCS_ProcedureCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterECS_ProcedureCall([NotNull] VBGrammarParser.ECS_ProcedureCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.eCS_ProcedureCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitECS_ProcedureCall([NotNull] VBGrammarParser.ECS_ProcedureCallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.eCS_MemberProcedureCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterECS_MemberProcedureCall([NotNull] VBGrammarParser.ECS_MemberProcedureCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.eCS_MemberProcedureCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitECS_MemberProcedureCall([NotNull] VBGrammarParser.ECS_MemberProcedureCallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.implicitCallStmt_InBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterImplicitCallStmt_InBlock([NotNull] VBGrammarParser.ImplicitCallStmt_InBlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.implicitCallStmt_InBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitImplicitCallStmt_InBlock([NotNull] VBGrammarParser.ImplicitCallStmt_InBlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.iCS_B_MemberProcedureCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterICS_B_MemberProcedureCall([NotNull] VBGrammarParser.ICS_B_MemberProcedureCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.iCS_B_MemberProcedureCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitICS_B_MemberProcedureCall([NotNull] VBGrammarParser.ICS_B_MemberProcedureCallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.iCS_B_ProcedureCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterICS_B_ProcedureCall([NotNull] VBGrammarParser.ICS_B_ProcedureCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.iCS_B_ProcedureCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitICS_B_ProcedureCall([NotNull] VBGrammarParser.ICS_B_ProcedureCallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.implicitCallStmt_InStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterImplicitCallStmt_InStmt([NotNull] VBGrammarParser.ImplicitCallStmt_InStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.implicitCallStmt_InStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitImplicitCallStmt_InStmt([NotNull] VBGrammarParser.ImplicitCallStmt_InStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.iCS_S_VariableOrProcedureCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterICS_S_VariableOrProcedureCall([NotNull] VBGrammarParser.ICS_S_VariableOrProcedureCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.iCS_S_VariableOrProcedureCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitICS_S_VariableOrProcedureCall([NotNull] VBGrammarParser.ICS_S_VariableOrProcedureCallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.iCS_S_ProcedureOrArrayCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterICS_S_ProcedureOrArrayCall([NotNull] VBGrammarParser.ICS_S_ProcedureOrArrayCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.iCS_S_ProcedureOrArrayCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitICS_S_ProcedureOrArrayCall([NotNull] VBGrammarParser.ICS_S_ProcedureOrArrayCallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.iCS_S_MembersCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterICS_S_MembersCall([NotNull] VBGrammarParser.ICS_S_MembersCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.iCS_S_MembersCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitICS_S_MembersCall([NotNull] VBGrammarParser.ICS_S_MembersCallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.iCS_S_MemberCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterICS_S_MemberCall([NotNull] VBGrammarParser.ICS_S_MemberCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.iCS_S_MemberCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitICS_S_MemberCall([NotNull] VBGrammarParser.ICS_S_MemberCallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.iCS_S_DictionaryCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterICS_S_DictionaryCall([NotNull] VBGrammarParser.ICS_S_DictionaryCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.iCS_S_DictionaryCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitICS_S_DictionaryCall([NotNull] VBGrammarParser.ICS_S_DictionaryCallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.argsCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArgsCall([NotNull] VBGrammarParser.ArgsCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.argsCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArgsCall([NotNull] VBGrammarParser.ArgsCallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.argCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArgCall([NotNull] VBGrammarParser.ArgCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.argCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArgCall([NotNull] VBGrammarParser.ArgCallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.dictionaryCallStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDictionaryCallStmt([NotNull] VBGrammarParser.DictionaryCallStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.dictionaryCallStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDictionaryCallStmt([NotNull] VBGrammarParser.DictionaryCallStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.argList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArgList([NotNull] VBGrammarParser.ArgListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.argList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArgList([NotNull] VBGrammarParser.ArgListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.arg"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArg([NotNull] VBGrammarParser.ArgContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.arg"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArg([NotNull] VBGrammarParser.ArgContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.argDefaultValue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArgDefaultValue([NotNull] VBGrammarParser.ArgDefaultValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.argDefaultValue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArgDefaultValue([NotNull] VBGrammarParser.ArgDefaultValueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.subscripts"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubscripts([NotNull] VBGrammarParser.SubscriptsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.subscripts"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubscripts([NotNull] VBGrammarParser.SubscriptsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.subscript"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubscript([NotNull] VBGrammarParser.SubscriptContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.subscript"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubscript([NotNull] VBGrammarParser.SubscriptContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.ambiguousIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAmbiguousIdentifier([NotNull] VBGrammarParser.AmbiguousIdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.ambiguousIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAmbiguousIdentifier([NotNull] VBGrammarParser.AmbiguousIdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.asTypeClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAsTypeClause([NotNull] VBGrammarParser.AsTypeClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.asTypeClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAsTypeClause([NotNull] VBGrammarParser.AsTypeClauseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.baseType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBaseType([NotNull] VBGrammarParser.BaseTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.baseType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBaseType([NotNull] VBGrammarParser.BaseTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.certainIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCertainIdentifier([NotNull] VBGrammarParser.CertainIdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.certainIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCertainIdentifier([NotNull] VBGrammarParser.CertainIdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.comparisonOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComparisonOperator([NotNull] VBGrammarParser.ComparisonOperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.comparisonOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComparisonOperator([NotNull] VBGrammarParser.ComparisonOperatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.complexType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComplexType([NotNull] VBGrammarParser.ComplexTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.complexType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComplexType([NotNull] VBGrammarParser.ComplexTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.fieldLength"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFieldLength([NotNull] VBGrammarParser.FieldLengthContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.fieldLength"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFieldLength([NotNull] VBGrammarParser.FieldLengthContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.letterrange"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLetterrange([NotNull] VBGrammarParser.LetterrangeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.letterrange"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLetterrange([NotNull] VBGrammarParser.LetterrangeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.lineLabel"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLineLabel([NotNull] VBGrammarParser.LineLabelContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.lineLabel"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLineLabel([NotNull] VBGrammarParser.LineLabelContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteral([NotNull] VBGrammarParser.LiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteral([NotNull] VBGrammarParser.LiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType([NotNull] VBGrammarParser.TypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType([NotNull] VBGrammarParser.TypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.typeHint"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeHint([NotNull] VBGrammarParser.TypeHintContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.typeHint"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeHint([NotNull] VBGrammarParser.TypeHintContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.visibility"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVisibility([NotNull] VBGrammarParser.VisibilityContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.visibility"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVisibility([NotNull] VBGrammarParser.VisibilityContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBGrammarParser.ambiguousKeyword"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAmbiguousKeyword([NotNull] VBGrammarParser.AmbiguousKeywordContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBGrammarParser.ambiguousKeyword"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAmbiguousKeyword([NotNull] VBGrammarParser.AmbiguousKeywordContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
